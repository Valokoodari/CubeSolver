# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        source venv/bin/activate
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --exclude=venv --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --exclude=venv --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
    - name: Lint with pylint
      run: |
        source venv/bin/activate
        mkdir ./pylint
        pylint src --output-format=text | tee ./pylint/pylint.log || pylint-exit $?
        PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
        anybadge -l pylint -v $PYLINT_SCORE -f pylint.svg 0=black 1=maroon 3=red 5=orange 7=yellow 8=yellowgreen 9=green 10=lime
        echo "Pylint score is $PYLINT_SCORE"
    - name: Upload the pylint badge
      uses: actions/upload-artifact@v2
      with:
        name: pylint.svg
        path: pylint/
        if-no-file-found: warn
    - name: Test with pytest
      run: |
        source venv/bin/activate
        pytest -v --cov-report term --cov=src
    - name: Test coverage to Codecov
      run: |
        source venv/bin/activate
        codecov
  